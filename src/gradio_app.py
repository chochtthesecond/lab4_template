import gradio as gr
import joblib
import numpy as np

from config import app_config

model = joblib.load(app_config.path_to_modelfile)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞
def predict_species(sepal_length, sepal_width, petal_length, petal_width):
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤
    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    prediction = model.predict(input_data)
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ—Ç–∫—É –∫–ª–∞—Å—Å–∞
    return prediction


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å gr.Blocks
with gr.Blocks(title="–ò–Ω—Ñ–µ—Ä–µ–Ω—Å –º–æ–¥–µ–ª–∏ Iris") as demo:
    gr.Markdown("## üå∏ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∏–¥–∞ –∏—Ä–∏—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

    with gr.Row():
        # –í—Ö–æ–¥–Ω—ã–µ —Å–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
        # –ú–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞
        sepal_length = gr.Slider(
            minimum=0, maximum=10, step=0.1, label="–î–ª–∏–Ω–∞ —á–∞—à–µ–ª–∏—Å—Ç–∏–∫–∞ (—Å–º)"
        )
        sepal_width = gr.Slider(
            minimum=0, maximum=5, step=0.1, label="–®–∏—Ä–∏–Ω–∞ —á–∞—à–µ–ª–∏—Å—Ç–∏–∫–∞ (—Å–º)"
        )
        petal_length = gr.Slider(
            minimum=0, maximum=10, step=0.1, label="–î–ª–∏–Ω–∞ –ª–µ–ø–µ—Å—Ç–∫–∞ (—Å–º)"
        )
        petal_width = gr.Slider(
            minimum=0, maximum=5, step=0.1, label="–®–∏—Ä–∏–Ω–∞ –ª–µ–ø–µ—Å—Ç–∫–∞ (—Å–º)"
        )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞
    predict_btn = gr.Button("–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å –≤–∏–¥")

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    result = gr.Textbox(label="–†–µ–∑—É–ª—å—Ç–∞—Ç")

    # –°–≤—è–∑—å –∫–Ω–æ–ø–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏
    predict_btn.click(
        fn=predict_species,
        inputs=[sepal_length, sepal_width, petal_length, petal_width],
        outputs=result,
    )

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    demo.launch()
